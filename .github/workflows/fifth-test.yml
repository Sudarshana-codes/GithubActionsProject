name: Artifact workflow
on:
  push:
    branches:
      - master
env:
  test: Test_env
jobs:
  test:
    environment: testing
    env:
#      username: ${{ secrets.DB_USERNAME }}
#      password: ${{ secrets.DB_PASSWORD }}
      username: ${{ secrets.DB_USERNAME_TEST }}
      password: ${{ secrets.DB_PASSWORD_TEST }}
      port: 8080
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v4
      - name: Setup Node.JS
        uses: actions/setup-node@v4
        with:
          node-version: '18'
      - name: Cache Dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        run: npm ci
      - name: Perform test
        id: run-tests
        run: npm test
      - name: Upload test report
        if: success() && steps.run-tests.outcome == 'success'
        run: echo "Uploaded"
      - name: Print test_username & test_env
        run: echo "print_username= $username & print_env= $test & print_port=$port"
#        run: echo "print_username= ${{ env.username }}"
  build:
    needs: test
    runs-on: ubuntu-latest
    outputs:
      script-file: ${{ steps.publish.outputs.script-file }}
    steps:
      - name: Get code
        uses: actions/checkout@v4
      - name: Cache Dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        run: npm ci
      - name: Build project
        run: npm run build
      - name: Publish html filename
        id: publish
        run: find dist/*.html -type f -execdir echo 'script-file={}' >> $GITHUB_OUTPUT ';'
#        run: find dist/*.html -type f -execdir echo '::set-output name=script-file::{}' ';'
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: dist-files
          path: dist
  #            path: |
  #              dist
  #              package.json
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: dist-files
      - name: Output contents
        run: ls
      - name: Output filename
        run: echo "${{ needs.build.outputs.script-file }}"
      - name: deploy
        run: echo "Deploying..."
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Output lint
        run: echo "lint info"
  report:
    needs: [lint,deploy]
    if: success()
    runs-on: ubuntu-latest
    steps:
      - name: Output info
        run: |
          echo "Something wrong"
          echo ${{ github }}
